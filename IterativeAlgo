import matplotlib.pyplot as plt
import time

def Mystery(n):
    """
    Calculates the sum of squares of the first n natural numbers.

    Args:
      n: A non-negative integer.

    Returns:
      The sum of squares of the first n natural numbers.
    """
    S = 0
    for i in range(1, n + 1):
        S += i * i
    return S

# Record the start time for Mystery function
start_time_mystery = time.time()

# Generate data for the graph
n_values = range(1, 11)
y_values = [Mystery(n) for n in n_values]

# Record the end time for Mystery function
end_time_mystery = time.time()

# Create the graph for Mystery function
plt.plot(n_values, y_values, marker='o', label='Sum of squares')
plt.xlabel('n')
plt.ylabel('Sum of squares')
plt.title('Mystery Function - Sum of Squares')
plt.legend()

# Show the graph for Mystery function
plt.grid(True)
plt.show()

# Calculate and print the total elapsed time for Mystery function
elapsed_time_mystery = end_time_mystery - start_time_mystery
print(f"Total elapsed time for Mystery function: {elapsed_time_mystery:.6f} seconds")
